version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: enterprise-backend
    ports:
      - "5000:8080"
    environment: 
      - ASPNETCORE_ENVIRONMENT=Docker 
      
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_started
      keycloak:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    networks:
      - backend-net

  redis:
    image: redis:7
    container_name: enterprise-redis
    ports:
      - "6379:6379"
    networks:
      - backend-net

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: enterprise-keycloak
    ports:
      - "8085:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    command: start-dev
    networks:
      - backend-net

 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: enterprise-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false    # فقط برای توسعه
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    ports:
      - "9200:9200"
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:9200 >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
    networks:
      - backend-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: enterprise-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://enterprise-elasticsearch:9200
    ports:
      - "5601:5601"
    volumes:
      - kibana_data:/usr/share/kibana/data
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - backend-net

  mongodb:
    image: mongo:7.0
    container_name: enterprise-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
    volumes:
      - mongo_data:/data/db
    healthcheck:
      
      test: ["CMD-SHELL", "mongosh --quiet --eval 'db.adminCommand({ ping: 1 }).ok' | grep 1 >/dev/null"]
      interval: 5s
      timeout: 3s
      retries: 20
    deploy:
      resources:
        limits:
          memory: 1g
    networks:
      - backend-net

  mongo-express:
    image: mongo-express:1.0.2
    container_name: enterprise-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      # روش 1 (قدیمی): یوزر/پسورد + سرور
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin123
      - ME_CONFIG_MONGODB_SERVER=mongodb
      
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - backend-net

networks:
  backend-net:
    driver: bridge

volumes:
  elastic_data:
    driver: local
  kibana_data:
    driver: local
  mongo_data:
    driver: local
