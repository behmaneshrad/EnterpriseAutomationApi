// <auto-generated />
using System;
using EnterpriseAutomation.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EnterpriseAutomation.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250729183222_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.ApprovalStep", b =>
                {
                    b.Property<int>("ApprovalStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalStepId"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproverUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StepId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("UserModifyId")
                        .HasColumnType("int");

                    b.HasKey("ApprovalStepId");

                    b.HasIndex("ApproverUserId");

                    b.HasIndex("RequestId");

                    b.ToTable("ApprovalSteps");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("CurrentStep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("UserModifyId")
                        .HasColumnType("int");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("CreatedByUserId");

                    b.HasIndex("WorkflowDefinitionId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserCreatedId")
                        .HasColumnType("int");

                    b.Property<int>("UserModifyId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.WorkflowDefinition", b =>
                {
                    b.Property<int>("WorkflowDefinitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkflowDefinitionId"));

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WorkflowDefinitionId");

                    b.HasIndex("CreatedById");

                    b.ToTable("WorkflowDefinitions");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.WorkflowStep", b =>
                {
                    b.Property<int>("WorkflowStepId")
                        .HasColumnType("int");

                    b.Property<bool>("Editable")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("WorkflowDefinitionId")
                        .HasColumnType("int");

                    b.HasKey("WorkflowStepId");

                    b.ToTable("WorkflowSteps");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.ApprovalStep", b =>
                {
                    b.HasOne("EnterpriseAutomation.Domain.Entities.User", "ApproverUser")
                        .WithMany("ApprovalSteps")
                        .HasForeignKey("ApproverUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EnterpriseAutomation.Domain.Entities.Request", "Request")
                        .WithMany("ApprovalSteps")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ApproverUser");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.Request", b =>
                {
                    b.HasOne("EnterpriseAutomation.Domain.Entities.User", "CreatedByUser")
                        .WithMany("Requests")
                        .HasForeignKey("CreatedByUserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EnterpriseAutomation.Domain.Entities.WorkflowDefinition", "WorkflowDefinition")
                        .WithMany("Requests")
                        .HasForeignKey("WorkflowDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("WorkflowDefinition");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.WorkflowDefinition", b =>
                {
                    b.HasOne("EnterpriseAutomation.Domain.Entities.User", "User")
                        .WithMany("WorkflowDefinitions")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.WorkflowStep", b =>
                {
                    b.HasOne("EnterpriseAutomation.Domain.Entities.WorkflowDefinition", "WorkflowDefinition")
                        .WithMany("WorkflowSteps")
                        .HasForeignKey("WorkflowStepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("WorkflowDefinition");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.Request", b =>
                {
                    b.Navigation("ApprovalSteps");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.User", b =>
                {
                    b.Navigation("ApprovalSteps");

                    b.Navigation("Requests");

                    b.Navigation("WorkflowDefinitions");
                });

            modelBuilder.Entity("EnterpriseAutomation.Domain.Entities.WorkflowDefinition", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("WorkflowSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
