{
  "id" : "b3a12a9c-9247-4481-ab7a-0f7741ae878a",
  "realm" : "enterprise-automation",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 300,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "27ac1ccc-b49d-4541-83e4-03fdf2fd4a41",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "b3a12a9c-9247-4481-ab7a-0f7741ae878a",
      "attributes" : { }
    }, {
      "id" : "b564cb32-eda6-4ee2-a6cf-c27ff45c81a9",
      "name" : "default-roles-enterprise-automation",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "manage-account", "view-profile" ]
        }
      },
      "clientRole" : false,
      "containerId" : "b3a12a9c-9247-4481-ab7a-0f7741ae878a",
      "attributes" : { }
    }, {
      "id" : "52d9c910-7064-497f-8518-c571b222ff15",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "b3a12a9c-9247-4481-ab7a-0f7741ae878a",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "e2338f2a-e7a6-4b2c-84ad-3a955db039db",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "46db5833-2100-4fed-b299-7172d0d2a9d3",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "a49bc6d0-2983-4a04-9f28-30b06dd1eac0",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "f7608f53-96e6-4298-98da-02934e7b1270",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "6cb84c07-7572-49b1-9992-19deb5ff6662",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "9448c76f-c781-4335-8205-b4c0f0f0ce86",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "1a3b5598-ace6-4aac-b5e0-ce28ab31c1b8",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "981606f1-ffb5-4385-a0bb-03c50c5433bf",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "99495fd7-8324-452b-8d11-c6871a5b6139",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "ee2a984b-4e5e-4892-aa2c-d11fd4c17aa1",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "b27a7585-7ca9-4729-a0cd-4d95584e10f5",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "manage-clients", "query-groups", "impersonation", "manage-events", "query-users", "view-clients", "query-clients", "view-events", "view-users", "manage-realm", "view-authorization", "manage-users", "view-realm", "create-client", "manage-authorization", "view-identity-providers", "manage-identity-providers", "query-realms" ]
          }
        },
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "b2fd2e8a-a96c-42b5-a763-67e1385fb3b3",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "bc33745d-11a9-40e3-9f4f-2d278ccd34b7",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "fe8d160e-b3f1-4f85-9e11-ea384136744f",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "e7f0c6c8-6806-4ff9-957f-6f40456e4a41",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "a3504cc5-4001-499f-8238-ff2f8c4d1e5a",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "b78c988e-9bf3-4fbf-9d31-900cb88ee522",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "d4edbc2a-5612-4e5b-b688-540a22fc165c",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      }, {
        "id" : "9bb9de2a-3269-426e-8fb2-2dbb29958bd8",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "1d085c47-7217-48d1-b704-aca8d50770c0",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "broker" : [ {
        "id" : "4cbec420-815f-4a48-8e2d-15eb5e5c1f7b",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "7e6f1b70-a8bf-463e-9d83-57aa49cfff84",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "4c59a431-7e27-44cb-93da-29d81b874972",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      }, {
        "id" : "3ddbf6cb-5b00-4c9b-b412-97fe29492a54",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      }, {
        "id" : "8611af94-868f-490a-bcd3-72d287c587e2",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      }, {
        "id" : "dccb61f9-7406-4b7a-927d-f91a4715aa72",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      }, {
        "id" : "2102dcef-0446-427c-97ac-bc27b6d1d4cd",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      }, {
        "id" : "0f37d71c-72e0-4971-8649-4fcb3af69e91",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      }, {
        "id" : "668bbbb1-591c-4e23-b92d-9a2033a8c2cb",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      }, {
        "id" : "cc59f9a8-370c-403e-ae62-113eea44c67b",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "b564cb32-eda6-4ee2-a6cf-c27ff45c81a9",
    "name" : "default-roles-enterprise-automation",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "b3a12a9c-9247-4481-ab7a-0f7741ae878a"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "users" : [ {
    "id" : "4dce2f24-161d-43f1-bdee-c19f780723b1",
    "username" : "erisa",
    "firstName" : "Erisa",
    "lastName" : "Ehsani",
    "email" : "ehsanierisa9@gmail.com",
    "emailVerified" : false,
    "createdTimestamp" : 1754305951879,
    "enabled" : true,
    "totp" : false,
    "credentials" : [ {
      "id" : "145477da-50a9-4b8b-a290-de3983b62832",
      "type" : "password",
      "userLabel" : "My password",
      "createdDate" : 1754305990582,
      "secretData" : "{\"value\":\"YdwQy4QdIht6BmkbqiqgtTBaF0qfOA/zL1sPepSVDPR821b1v8RTeWwOLPQHAZxfNubNWlg1zu4v0qbUdQ3x7w==\",\"salt\":\"NG+2tyXsbKoGa38hnUvZ8Q==\",\"additionalParameters\":{}}",
      "credentialData" : "{\"hashIterations\":210000,\"algorithm\":\"pbkdf2-sha512\",\"additionalParameters\":{}}"
    } ],
    "disableableCredentialTypes" : [ ],
    "requiredActions" : [ ],
    "realmRoles" : [ "default-roles-enterprise-automation" ],
    "notBefore" : 0,
    "groups" : [ ]
  } ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "ee68d9c2-8953-4610-b62a-efa4a0ca7dfc",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/enterprise-automation/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/enterprise-automation/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "973622b2-5f06-4b2b-beac-5d17463789ff",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/enterprise-automation/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/enterprise-automation/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "ba942525-67b4-47be-94e2-025020169cf2",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "3e46afce-8854-4f99-af51-e0e152005ee6",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "7e6f1b70-a8bf-463e-9d83-57aa49cfff84",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "1d085c47-7217-48d1-b704-aca8d50770c0",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "15cee444-dca0-4b3f-b98a-7421c9163c3c",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/enterprise-automation/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/enterprise-automation/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "65b959d4-f1ae-4457-a7fa-85827e5bf6ea",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "640ae0ba-31d9-42dd-90f9-82e8d3dfa4cf",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${emailScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "f5a3d8b5-914c-483c-a361-4f0b4fc8d54a",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "8a541c59-2031-480f-a68b-0546de671678",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a2e6a71b-0ca8-4d84-a7cb-a3070b70c9c1",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false",
      "consent.screen.text" : ""
    },
    "protocolMappers" : [ {
      "id" : "8cd644f3-e1a1-4fc7-83c1-6f69fc2b5c20",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "0a2ef521-3df9-415b-8477-30776d4a0096",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "275d9f99-4a5e-45fc-af92-6ceded2c2e3c",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "f1b3ccb3-e1ac-451f-8f60-b19bae6bce95",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "3c00b7c8-cff3-44ab-8364-ab9aae5c80c4",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "251288b4-0ad4-4647-91d7-5e7cf8eb67d4",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "dcdd6669-caee-4924-9c04-48d0142c2000",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "a250a6e6-539e-4cc5-a5b4-1697ddb75190",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${rolesScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "79b507ac-8bfe-4423-993e-e358be57bbf2",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    }, {
      "id" : "54deace4-b838-4f21-8348-cf1150bc8255",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "410832c1-213f-465c-9caa-3e32e901157c",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "e64faec8-7f86-48d4-988e-30ac86ec930c",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${profileScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "4f3bc0b8-082a-4a65-a8ce-9aebe66b8321",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "0d06ee65-458d-479b-bf5f-52f88dfc7ddd",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "ed31229a-3da2-4dd4-b2ad-0cdaddcf97b8",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e0c896c3-a70d-4dad-9241-fbe92a1344c8",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "cbaf51af-b59e-49eb-9292-184749d615f4",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "e15244ce-4c7d-4121-be4b-29765f667412",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "06c012e7-07c3-4ff0-a256-0a72c8ed44b0",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "14f6367c-04f3-41ed-9659-6483acaff9af",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9ab58c81-81ab-4f58-a272-3a0f203ef2ff",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "90868568-b2c3-4a54-b935-f18b324aed11",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6a1c7f18-786e-4490-a345-a24614fe5456",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "c1e788e5-4721-4358-9fe4-5826c6c95ea0",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "40259b1e-2655-43d5-8d81-ddd7fe36e301",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "439eb229-66ae-4ea7-885a-96e67b4da58a",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "cc62e527-a0c7-490d-9e50-9f57be7691b6",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${addressScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "b99f9788-408f-49fd-bf7e-e864243e2b4d",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "4fa4a23b-4eb3-4bbd-a826-985afe59a58d",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}"
    },
    "protocolMappers" : [ {
      "id" : "16d12236-a1f5-420e-ac4e-412c0d5ea79b",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a3c83cfd-962a-4797-beff-0b6d7bf7c130",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "1d204ba1-5265-4e8b-aed7-86d2a29aa135",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "dd849fb4-453c-4551-bd9f-287ef5302928",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "role_list", "profile", "email", "roles", "web-origins", "acr" ],
  "defaultOptionalClientScopes" : [ "offline_access", "address", "phone", "microprofile-jwt" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "75796213-78bf-4413-87ba-7f9137944260",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "3e72adaa-c233-4bf3-90a9-4742847c4fb6",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "a4a0bcb0-e10a-46e4-b2af-012c08d3847a",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-sha256-pairwise-sub-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-usermodel-attribute-mapper", "oidc-address-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "c9043adf-394b-4647-935f-4eabf5b9f73f",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "64a2e0c3-fcd8-4199-99bf-8183e40bbe3c",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-user-attribute-mapper", "oidc-usermodel-attribute-mapper", "saml-user-property-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-address-mapper", "oidc-full-name-mapper", "oidc-usermodel-property-mapper", "saml-role-list-mapper" ]
      }
    }, {
      "id" : "1f7e75fd-ad7b-4716-8a48-49c2b3d78cba",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "aad5e409-44bf-42e2-a2f3-c88ccf743573",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "1356e9c1-60b0-47f9-ba46-cbb797c67e56",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "0511d73c-4b82-495d-b57f-5d1315578183",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEAwhAgfhjYJVVI2SdTALCfe+wNNT9xvHcFqW/n0kzSflKyjM+0r8y83nKndWjq8p2yhXRlvLsmsu/GXQlJx2rC6Wutyu+BWteQJCP4QZ6qOVKVZ541cQIiz2y8qYLN+BRjEdcFInlqBamHdJSFaU6GLl7Kue5QdWYKQnouDGervTijqiXbmWuXvy0Dfi1K/X9oL9eAEQ+EqYMnfGO9mVUITs8tkYs9jVmA/LN0o3d3K7UU4BAF5rfYXT0osGiBEafQRcRglJImA5/JvXNMK585l0Lu0yojLTLTsUpwBFt20Dp17Cg8+m+jyRAd1wU+7676RGUeHmYbqOPSfyHzNWNyVQIDAQABAoIBAAWtGa4zUgf0tyVDrUqJxmU5a2d7Anu8BX15VimeCp6CrITjqTBmx8CmUBFmLx0UKyRHjWQ+tLj3vD19AVxX88YgQQ/JZc1/UAPmmdY3HfNNEy0NNExb/u9CcHNxOoILlc9wErV5h9xziXbWk0WYJ0kuITYQBOilW+tDp84me1NhypOTxoJBQvBO7T8pXIZxArovMuo6lIxEzou6CJJS0z+kPHBd3JCYivxRVjhFnVQCWZGiv+wE3cc4SHAg4I75GA1OVpeLICDhrT8OmgOi2whG29D1wbq8zAfp3EWCTsZkLolkjWeWJaxy2RJjiwUeXAMHQWoU3C2i7PRN+0IvHJ8CgYEA6IEUppl34DplBy2Pjw6Q0++ziC30Xp8vSBCCNmQ2oLI0ZxbIQL7yw1TlYh1rwI4+P3RN64NTD3aHyEBExyd1dNyyYPyEMNfTsadh24dQz++bFziCd5OBFQoZA90EZT/mAv9tWq6Yvj3jTXAB+Rsx6ddcSKpADqk1ygAmPxfeTusCgYEA1ayQ4bbx3IQJtgeXKk+oHAfK7moxA39/BTztjDwTvOaKEilPYiKyR1Kw9CPbINLLEOD8KZceZ6OsD4Tq8WXQ48OQe5+SLMepWrInW/ahQeEz/UoFjoA1qyq6AUdNGDpexL1+xiAmDnNEVE3FIZpzbmSBTXgeUtvSR5SdBbR5c78CgYEAkllNymAnmLipBw+ioYWlnAHxm/JxM243sMDTdbE2wYfqfElW24pV/KXfjRa/0IC4pfBra6dKDR2q8l2h7UnlIR4aGfpYqvXvho+5hRlzwK8tjDxBw0rRoZCtlkT0k1bZTWHCT6Y+9uC1xvSOCWMY0/x/Vi30DEZuWSwm5uf7QukCgYBf6p4C5Ke/kHn3f4LJGIbjRlA/I+YqptHzHP2ZhOJrWqXCL08WQ3L591G91laobld/lS880Dxy05MKSGVaxZS2mXRDOkdY2KvaLbzjWFvdAeXfnpnN9RmiY4SpzEL8TD98W4AMGiRbOj0DBwIl6npEpNMyXmhmU40aWsj95ZzbawKBgQCiDhkbK8qQboHRvAHNn+6p4Zef2RCH+rwIRBoNHaCfQHxMxvsy3t1tTU9Pqws6sv01JUked/4t9ytA9SMu0uK9iDJKcVIPLpPX3LvsYDsfnR8lv1ninLHX8EWwxe9s0eDfy+KFiO05uqkYbyLwNIfNujR7oauDWOmt5a8HF9rxxQ==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICuTCCAaECBgGYJzxEgTANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDDBVlbnRlcnByaXNlLWF1dG9tYXRpb24wHhcNMjUwNzIwMDk0NjU3WhcNMzUwNzIwMDk0ODM3WjAgMR4wHAYDVQQDDBVlbnRlcnByaXNlLWF1dG9tYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDCECB+GNglVUjZJ1MAsJ977A01P3G8dwWpb+fSTNJ+UrKMz7SvzLzecqd1aOrynbKFdGW8uyay78ZdCUnHasLpa63K74Fa15AkI/hBnqo5UpVnnjVxAiLPbLypgs34FGMR1wUieWoFqYd0lIVpToYuXsq57lB1ZgpCei4MZ6u9OKOqJduZa5e/LQN+LUr9f2gv14ARD4Spgyd8Y72ZVQhOzy2Riz2NWYD8s3Sjd3crtRTgEAXmt9hdPSiwaIERp9BFxGCUkiYDn8m9c0wrnzmXQu7TKiMtMtOxSnAEW3bQOnXsKDz6b6PJEB3XBT7vrvpEZR4eZhuo49J/IfM1Y3JVAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAHJFhB80VKYMZGchpQSMg37PPLDuTV1sJ1AXODE/LsM4+ll6RD7rfLIqYA/QuypbD1hqZjBRUN8yImtt63y+o3RXaIb+0z9keWlNNOqLapNOTOfEtG32B+E3U5Hjo73H8szj0+N4nSwUNiwgXBEbQvXQbCu8wkzHFwM6c0jJN0M1ZpKXyep9ycxNpQ1BQ5i5VXz7xATk28GYCUq6sDxMHElgAYkjrEcGXTxNHs+WnANhT9f6P9EZpNWD/Sniy/ZOyUG0XLRF8qfanj4GO6nZNxaaEnQUR/dsrnNQC2ZRv/BNg0/TFwAXcOe7YfK0t6inm9LFf9O0iUx3dIyRlB8lZro=" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    }, {
      "id" : "8d9a4e24-02d3-4a1e-b737-ab4beb1dcf26",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "73005c75-be86-448d-b423-d2b2e32aa535" ],
        "secret" : [ "WRmfOqhW_K_CAfwNRRDhSuruxxFS_c--w4YDdPjihXzajytNrZpKoJ807aQquGb1kFZAG7BOy3tx5YkDu5yQMStSJB9J2R8CAtEYB4KWx_dJyCfFaiuozo3ABpqf9iW247PzKm3mc5SN6X7EERd_qP34ZZERVrUANrwbYmTwPxs" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "759586ae-4f27-48df-a26f-68d39bd92ea9",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "a5e275e6-325b-43d5-8747-ef905219c0db" ],
        "secret" : [ "Z3-v5fF_pIgP3tP0AX4HtA" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "a985049f-7e8b-4093-8804-681e6631f6b6",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEowIBAAKCAQEAql4OeJ8AV2U29ZDJEsrhoekbFBOrTuSViyVFue8dgCiJaOPjbDzOzRTeTSCg3RiQDff42aT67EoC4yjBHUGBk89xz7BVhZXQ65uahBXuhEb8gNQuxh4i564g2WB1VO4+SK0uY4YSF+aYi58Ig7rtcmfRMc6Re4cmGG6wmVLlFtV/NOXkLtuUafIn+OYTo4gaxN2FPcd64qoWRmDcpsmV/GDSH3xZ77OoMkqbSlKeFRZo0fq0R3GHMBS5GeUAR4fawi9vMwgEPeH56ySFs5TGRftTrwWa3TZa8ojwnrDdueCqY+n4R7haNWywVDaPTeZVR3VUxz7R+iMX7yNGgIKPtwIDAQABAoIBAD2Hwdc7qd5mnk5bb9ubLZmR/KcoIW9ZbE84c3HfU/rE6TfaUnl1jsUP2+fkOGUR6Xk6DYThqoRriJZtUi3USk3Nls/JYmHgRXfKl6hL2XypvKl0uL3yBW5Ce/e2eDnn39PUxFPKiL9cF80Zb3RQL1DqAOppri58lbwuQhbmEvpHIiveninXvleSq9lpqURpoMe07HbTx9KyJU9AlXEoxyTlbmr0LpXdMjoy//t74zMOgG6hwilsv5fibbeO6oyVHuvi+4DZVT9zhQ/R5ba/kolL1fbaCRoz6WqT0ETigaypbEE46oGIfM+16TMnXH9SozKCyq6CfYnvah8xVPsXLLkCgYEA71p4YPcx2T+wZKOw472gzt0MfLGr4wzzaCLyrmehnsi139CTPasmOcBmAGKTgDYztYuF8tcwtaj4vfuRrIuv88hluq0MJc87DoJHPweUAQCSB4iyJgzcEAIqswXtIS/3mEu5uv+mNkVwLxjY02f7oIeNe7ZOQ2D74t0sQCBEFc8CgYEAtjdWDDl8h9uZqYwqypZkybQhx+ZS0kWUapRu2V+/Hwttb0zPsBsWeZjPfFRoLclSjM17QKvag3FsfF13L2CKpXXKNZO3TsVXdQjYBlQJXazekBdg+1HQu6+0XI3kVYYNucXN2k2U3AcaMHBJR7AWCd9MTnzqWSzlFH9w5hCuyZkCgYAp25NzuacRDA9H+kxj93SY2JVndRbPNSOYEYyJLXxZLVaJFou5XCXqMZhk9tg+srvmQskhB7rv+eXOK6F1IFSb+G6576tRLWVxixz0i9m5NyVShfhJqTQO5KIc/qtSg3X0P0HyzuR9VzVgNyMsDWI2153Jhb84D0zdhrpHWJ0vhwKBgCcY7H+m/g9wkSIOD0h0yJ925SCtTOwNPfE4dCh0IOAaZZrSEmYpCcOBhFObENdyMSJBHMcdmL9HYQ22SFKEFnu2MHMahOSD92YHRcLl2TSeWQr12TtTrMP4yWxqjanEH8HSrX6/0sb7RyVJko+tOq1Xmlnk96u2tFiXl7PltHtRAoGBAK9Jpu+ruUf6pXboNAjx1bA9sGiVj50oAyPh4sAQ0tmjgCqres+pVZ+GttJpgP51WY3Ypn8qKwnLiuYQiYIKesihNwEuLGVPVIbsMUfE2OIB/yR177zIs7tnJuGiCk74q7nb8JLWKzmG0FtkhOiFw8it3LPOHzoC4HKDKrlwiKsI" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICuTCCAaECBgGYJzxBMDANBgkqhkiG9w0BAQsFADAgMR4wHAYDVQQDDBVlbnRlcnByaXNlLWF1dG9tYXRpb24wHhcNMjUwNzIwMDk0NjU3WhcNMzUwNzIwMDk0ODM3WjAgMR4wHAYDVQQDDBVlbnRlcnByaXNlLWF1dG9tYXRpb24wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqXg54nwBXZTb1kMkSyuGh6RsUE6tO5JWLJUW57x2AKIlo4+NsPM7NFN5NIKDdGJAN9/jZpPrsSgLjKMEdQYGTz3HPsFWFldDrm5qEFe6ERvyA1C7GHiLnriDZYHVU7j5IrS5jhhIX5piLnwiDuu1yZ9ExzpF7hyYYbrCZUuUW1X805eQu25Rp8if45hOjiBrE3YU9x3riqhZGYNymyZX8YNIffFnvs6gySptKUp4VFmjR+rRHcYcwFLkZ5QBHh9rCL28zCAQ94fnrJIWzlMZF+1OvBZrdNlryiPCesN254Kpj6fhHuFo1bLBUNo9N5lVHdVTHPtH6IxfvI0aAgo+3AgMBAAEwDQYJKoZIhvcNAQELBQADggEBAFLomyu6VAglcxS8GbICSyd53FKATPde6YlEw2WUudRw3y1P5z3Qje07ketjxfS+V2XdCDPwgW/ZXPTnCYmI5PcGkUXCOh0SpEcnAEehSpxZwJxYpgxq179xoxTcFcJQm6piuXibQ1oJ9MDttV+kfuuFr/1tLa2TyTutFJ6ha96TpDWsKeRXP9zA1462EkQBlEqzlb2D4h2/L6/kJn6DAWRfg0M1C+0N1Xk1HrQKfPziVrMNBapMBHCKmO8CEEOwqoRJwC2mDSxCBRIpKcdjvDJxe8tMqdEI6/uF3/vAhAtRZ6Zow1XzFcnm0PBFqSm4QVr1ZVDjhoqsKmfR5yIM69s=" ],
        "priority" : [ "100" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "a7db7a16-5786-43bb-8d86-283829072c20",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8f5e3766-3d03-4d7e-a5ee-24010afada53",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "01984df8-9b07-401e-b2cc-27c1e16d3939",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f11deaf8-b197-41fe-9786-aa5dc6d89046",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f0fb7911-e005-41d7-b8fc-001636115217",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "02028f82-70da-4812-8bcb-e44ac567b5f1",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "1c2d6b3a-76d2-4308-9f42-3a3637af8fcd",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "55ac3051-9373-48d0-8b13-21f117fed158",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "618d73f4-5a67-489f-80f6-55ee44270273",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e2490ebe-407f-4f6e-9f22-fd8236b210e0",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "26b2355e-16c2-4e09-8e0f-371be66d2b59",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c483c1bf-3380-45f6-a377-f1c22899c236",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e7de07b2-739b-45c4-b485-7fa22a687955",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a4690069-1246-480f-a9f8-a52aa92ee036",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "534d5f29-7b78-4bdc-9021-60e0d29243c0",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "a1a7e6df-5165-47e3-9e37-97abac696671",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f30f2696-4e43-41b7-8649-d3d03d2a6f20",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c128e908-afdb-4c66-a3e1-8e3f9213232a",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "2716b01d-f67f-4db0-9500-b2115569b329",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "8493ff04-d875-4283-9495-8d1a5078ce6f",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaExpiresIn" : "120",
    "cibaAuthRequestedUserHint" : "login_hint",
    "oauth2DeviceCodeLifespan" : "600",
    "oauth2DevicePollingInterval" : "5",
    "parRequestUriLifespan" : "60",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false"
  },
  "keycloakVersion" : "24.0.1",
  "userManagedAccessAllowed" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}